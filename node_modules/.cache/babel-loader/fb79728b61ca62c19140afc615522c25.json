{"ast":null,"code":"import * as THREE from '../build/three.module.js';\nimport { PointerLockControls } from './jsm/controls/PointerLockControls.js';\nlet camera, scene, renderer, controls;\nconst objects = [];\nlet raycaster;\nlet moveForward = false;\nlet moveBackward = false;\nlet moveLeft = false;\nlet moveRight = false;\nlet canJump = false;\nlet prevTime = performance.now();\nconst velocity = new THREE.Vector3();\nconst direction = new THREE.Vector3();\nconst vertex = new THREE.Vector3();\nconst color = new THREE.Color();\ninit();\nanimate();\n\nfunction init() {\n  camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 1000);\n  camera.position.y = 10;\n  scene = new THREE.Scene();\n  scene.background = new THREE.Color(0xffffff);\n  scene.fog = new THREE.Fog(0xffffff, 0, 750);\n  const light = new THREE.HemisphereLight(0xeeeeff, 0x777788, 0.75);\n  light.position.set(0.5, 1, 0.75);\n  scene.add(light);\n  controls = new PointerLockControls(camera, document.body);\n  const blocker = document.getElementById('blocker');\n  const instructions = document.getElementById('instructions');\n  instructions.addEventListener('click', function () {\n    controls.lock();\n  });\n  controls.addEventListener('lock', function () {\n    instructions.style.display = 'none';\n    blocker.style.display = 'none';\n  });\n  controls.addEventListener('unlock', function () {\n    blocker.style.display = 'block';\n    instructions.style.display = '';\n  });\n  scene.add(controls.getObject());\n\n  const onKeyDown = function (event) {\n    switch (event.code) {\n      case 'ArrowUp':\n      case 'KeyW':\n        moveForward = true;\n        break;\n\n      case 'ArrowLeft':\n      case 'KeyA':\n        moveLeft = true;\n        break;\n\n      case 'ArrowDown':\n      case 'KeyS':\n        moveBackward = true;\n        break;\n\n      case 'ArrowRight':\n      case 'KeyD':\n        moveRight = true;\n        break;\n\n      case 'Space':\n        if (canJump === true) velocity.y += 350;\n        canJump = false;\n        break;\n    }\n  };\n\n  const onKeyUp = function (event) {\n    switch (event.code) {\n      case 'ArrowUp':\n      case 'KeyW':\n        moveForward = false;\n        break;\n\n      case 'ArrowLeft':\n      case 'KeyA':\n        moveLeft = false;\n        break;\n\n      case 'ArrowDown':\n      case 'KeyS':\n        moveBackward = false;\n        break;\n\n      case 'ArrowRight':\n      case 'KeyD':\n        moveRight = false;\n        break;\n    }\n  };\n\n  document.addEventListener('keydown', onKeyDown);\n  document.addEventListener('keyup', onKeyUp);\n  raycaster = new THREE.Raycaster(new THREE.Vector3(), new THREE.Vector3(0, -1, 0), 0, 10); // floor\n\n  let floorGeometry = new THREE.PlaneGeometry(2000, 2000, 100, 100);\n  floorGeometry.rotateX(-Math.PI / 2); // vertex displacement\n\n  let position = floorGeometry.attributes.position;\n\n  for (let i = 0, l = position.count; i < l; i++) {\n    vertex.fromBufferAttribute(position, i);\n    vertex.x += Math.random() * 20 - 10;\n    vertex.y += Math.random() * 2;\n    vertex.z += Math.random() * 20 - 10;\n    position.setXYZ(i, vertex.x, vertex.y, vertex.z);\n  }\n\n  floorGeometry = floorGeometry.toNonIndexed(); // ensure each face has unique vertices\n\n  position = floorGeometry.attributes.position;\n  const colorsFloor = [];\n\n  for (let i = 0, l = position.count; i < l; i++) {\n    color.setHSL(Math.random() * 0.3 + 0.5, 0.75, Math.random() * 0.25 + 0.75);\n    colorsFloor.push(color.r, color.g, color.b);\n  }\n\n  floorGeometry.setAttribute('color', new THREE.Float32BufferAttribute(colorsFloor, 3));\n  const floorMaterial = new THREE.MeshBasicMaterial({\n    vertexColors: true\n  });\n  const floor = new THREE.Mesh(floorGeometry, floorMaterial);\n  scene.add(floor); // objects\n\n  const boxGeometry = new THREE.BoxGeometry(20, 20, 20).toNonIndexed();\n  position = boxGeometry.attributes.position;\n  const colorsBox = [];\n\n  for (let i = 0, l = position.count; i < l; i++) {\n    color.setHSL(Math.random() * 0.3 + 0.5, 0.75, Math.random() * 0.25 + 0.75);\n    colorsBox.push(color.r, color.g, color.b);\n  }\n\n  boxGeometry.setAttribute('color', new THREE.Float32BufferAttribute(colorsBox, 3));\n\n  for (let i = 0; i < 500; i++) {\n    const boxMaterial = new THREE.MeshPhongMaterial({\n      specular: 0xffffff,\n      flatShading: true,\n      vertexColors: true\n    });\n    boxMaterial.color.setHSL(Math.random() * 0.2 + 0.5, 0.75, Math.random() * 0.25 + 0.75);\n    const box = new THREE.Mesh(boxGeometry, boxMaterial);\n    box.position.x = Math.floor(Math.random() * 20 - 10) * 20;\n    box.position.y = Math.floor(Math.random() * 20) * 20 + 10;\n    box.position.z = Math.floor(Math.random() * 20 - 10) * 20;\n    scene.add(box);\n    objects.push(box);\n  } //\n\n\n  renderer = new THREE.WebGLRenderer({\n    antialias: true\n  });\n  renderer.setPixelRatio(window.devicePixelRatio);\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  document.body.appendChild(renderer.domElement); //\n\n  window.addEventListener('resize', onWindowResize);\n}\n\nfunction onWindowResize() {\n  camera.aspect = window.innerWidth / window.innerHeight;\n  camera.updateProjectionMatrix();\n  renderer.setSize(window.innerWidth, window.innerHeight);\n}\n\nfunction animate() {\n  requestAnimationFrame(animate);\n  const time = performance.now();\n\n  if (controls.isLocked === true) {\n    raycaster.ray.origin.copy(controls.getObject().position);\n    raycaster.ray.origin.y -= 10;\n    const intersections = raycaster.intersectObjects(objects);\n    const onObject = intersections.length > 0;\n    const delta = (time - prevTime) / 1000;\n    velocity.x -= velocity.x * 10.0 * delta;\n    velocity.z -= velocity.z * 10.0 * delta;\n    velocity.y -= 9.8 * 100.0 * delta; // 100.0 = mass\n\n    direction.z = Number(moveForward) - Number(moveBackward);\n    direction.x = Number(moveRight) - Number(moveLeft);\n    direction.normalize(); // this ensures consistent movements in all directions\n\n    if (moveForward || moveBackward) velocity.z -= direction.z * 400.0 * delta;\n    if (moveLeft || moveRight) velocity.x -= direction.x * 400.0 * delta;\n\n    if (onObject === true) {\n      velocity.y = Math.max(0, velocity.y);\n      canJump = true;\n    }\n\n    controls.moveRight(-velocity.x * delta);\n    controls.moveForward(-velocity.z * delta);\n    controls.getObject().position.y += velocity.y * delta; // new behavior\n\n    if (controls.getObject().position.y < 10) {\n      velocity.y = 0;\n      controls.getObject().position.y = 10;\n      canJump = true;\n    }\n  }\n\n  prevTime = time;\n  renderer.render(scene, camera);\n}","map":{"version":3,"sources":["/Users/torabi97/Desktop/post-bootcamp/react-three/src/components/Portfolio.js"],"names":["THREE","PointerLockControls","camera","scene","renderer","controls","objects","raycaster","moveForward","moveBackward","moveLeft","moveRight","canJump","prevTime","performance","now","velocity","Vector3","direction","vertex","color","Color","init","animate","PerspectiveCamera","window","innerWidth","innerHeight","position","y","Scene","background","fog","Fog","light","HemisphereLight","set","add","document","body","blocker","getElementById","instructions","addEventListener","lock","style","display","getObject","onKeyDown","event","code","onKeyUp","Raycaster","floorGeometry","PlaneGeometry","rotateX","Math","PI","attributes","i","l","count","fromBufferAttribute","x","random","z","setXYZ","toNonIndexed","colorsFloor","setHSL","push","r","g","b","setAttribute","Float32BufferAttribute","floorMaterial","MeshBasicMaterial","vertexColors","floor","Mesh","boxGeometry","BoxGeometry","colorsBox","boxMaterial","MeshPhongMaterial","specular","flatShading","box","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","appendChild","domElement","onWindowResize","aspect","updateProjectionMatrix","requestAnimationFrame","time","isLocked","ray","origin","copy","intersections","intersectObjects","onObject","length","delta","Number","normalize","max","render"],"mappings":"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","sourcesContent":["import * as THREE from '../build/three.module.js';\n\n\t\t\timport { PointerLockControls } from './jsm/controls/PointerLockControls.js';\n\n\t\t\tlet camera, scene, renderer, controls;\n\n\t\t\tconst objects = [];\n\n\t\t\tlet raycaster;\n\n\t\t\tlet moveForward = false;\n\t\t\tlet moveBackward = false;\n\t\t\tlet moveLeft = false;\n\t\t\tlet moveRight = false;\n\t\t\tlet canJump = false;\n\n\t\t\tlet prevTime = performance.now();\n\t\t\tconst velocity = new THREE.Vector3();\n\t\t\tconst direction = new THREE.Vector3();\n\t\t\tconst vertex = new THREE.Vector3();\n\t\t\tconst color = new THREE.Color();\n\n\t\t\tinit();\n\t\t\tanimate();\n\n\t\t\tfunction init() {\n\n\t\t\t\tcamera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 1000 );\n\t\t\t\tcamera.position.y = 10;\n\n\t\t\t\tscene = new THREE.Scene();\n\t\t\t\tscene.background = new THREE.Color( 0xffffff );\n\t\t\t\tscene.fog = new THREE.Fog( 0xffffff, 0, 750 );\n\n\t\t\t\tconst light = new THREE.HemisphereLight( 0xeeeeff, 0x777788, 0.75 );\n\t\t\t\tlight.position.set( 0.5, 1, 0.75 );\n\t\t\t\tscene.add( light );\n\n\t\t\t\tcontrols = new PointerLockControls( camera, document.body );\n\n\t\t\t\tconst blocker = document.getElementById( 'blocker' );\n\t\t\t\tconst instructions = document.getElementById( 'instructions' );\n\n\t\t\t\tinstructions.addEventListener( 'click', function () {\n\n\t\t\t\t\tcontrols.lock();\n\n\t\t\t\t} );\n\n\t\t\t\tcontrols.addEventListener( 'lock', function () {\n\n\t\t\t\t\tinstructions.style.display = 'none';\n\t\t\t\t\tblocker.style.display = 'none';\n\n\t\t\t\t} );\n\n\t\t\t\tcontrols.addEventListener( 'unlock', function () {\n\n\t\t\t\t\tblocker.style.display = 'block';\n\t\t\t\t\tinstructions.style.display = '';\n\n\t\t\t\t} );\n\n\t\t\t\tscene.add( controls.getObject() );\n\n\t\t\t\tconst onKeyDown = function ( event ) {\n\n\t\t\t\t\tswitch ( event.code ) {\n\n\t\t\t\t\t\tcase 'ArrowUp':\n\t\t\t\t\t\tcase 'KeyW':\n\t\t\t\t\t\t\tmoveForward = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ArrowLeft':\n\t\t\t\t\t\tcase 'KeyA':\n\t\t\t\t\t\t\tmoveLeft = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ArrowDown':\n\t\t\t\t\t\tcase 'KeyS':\n\t\t\t\t\t\t\tmoveBackward = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ArrowRight':\n\t\t\t\t\t\tcase 'KeyD':\n\t\t\t\t\t\t\tmoveRight = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'Space':\n\t\t\t\t\t\t\tif ( canJump === true ) velocity.y += 350;\n\t\t\t\t\t\t\tcanJump = false;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t\tconst onKeyUp = function ( event ) {\n\n\t\t\t\t\tswitch ( event.code ) {\n\n\t\t\t\t\t\tcase 'ArrowUp':\n\t\t\t\t\t\tcase 'KeyW':\n\t\t\t\t\t\t\tmoveForward = false;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ArrowLeft':\n\t\t\t\t\t\tcase 'KeyA':\n\t\t\t\t\t\t\tmoveLeft = false;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ArrowDown':\n\t\t\t\t\t\tcase 'KeyS':\n\t\t\t\t\t\t\tmoveBackward = false;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ArrowRight':\n\t\t\t\t\t\tcase 'KeyD':\n\t\t\t\t\t\t\tmoveRight = false;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t\tdocument.addEventListener( 'keydown', onKeyDown );\n\t\t\t\tdocument.addEventListener( 'keyup', onKeyUp );\n\n\t\t\t\traycaster = new THREE.Raycaster( new THREE.Vector3(), new THREE.Vector3( 0, - 1, 0 ), 0, 10 );\n\n\t\t\t\t// floor\n\n\t\t\t\tlet floorGeometry = new THREE.PlaneGeometry( 2000, 2000, 100, 100 );\n\t\t\t\tfloorGeometry.rotateX( - Math.PI / 2 );\n\n\t\t\t\t// vertex displacement\n\n\t\t\t\tlet position = floorGeometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = position.count; i < l; i ++ ) {\n\n\t\t\t\t\tvertex.fromBufferAttribute( position, i );\n\n\t\t\t\t\tvertex.x += Math.random() * 20 - 10;\n\t\t\t\t\tvertex.y += Math.random() * 2;\n\t\t\t\t\tvertex.z += Math.random() * 20 - 10;\n\n\t\t\t\t\tposition.setXYZ( i, vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t\tfloorGeometry = floorGeometry.toNonIndexed(); // ensure each face has unique vertices\n\n\t\t\t\tposition = floorGeometry.attributes.position;\n\t\t\t\tconst colorsFloor = [];\n\n\t\t\t\tfor ( let i = 0, l = position.count; i < l; i ++ ) {\n\n\t\t\t\t\tcolor.setHSL( Math.random() * 0.3 + 0.5, 0.75, Math.random() * 0.25 + 0.75 );\n\t\t\t\t\tcolorsFloor.push( color.r, color.g, color.b );\n\n\t\t\t\t}\n\n\t\t\t\tfloorGeometry.setAttribute( 'color', new THREE.Float32BufferAttribute( colorsFloor, 3 ) );\n\n\t\t\t\tconst floorMaterial = new THREE.MeshBasicMaterial( { vertexColors: true } );\n\n\t\t\t\tconst floor = new THREE.Mesh( floorGeometry, floorMaterial );\n\t\t\t\tscene.add( floor );\n\n\t\t\t\t// objects\n\n\t\t\t\tconst boxGeometry = new THREE.BoxGeometry( 20, 20, 20 ).toNonIndexed();\n\n\t\t\t\tposition = boxGeometry.attributes.position;\n\t\t\t\tconst colorsBox = [];\n\n\t\t\t\tfor ( let i = 0, l = position.count; i < l; i ++ ) {\n\n\t\t\t\t\tcolor.setHSL( Math.random() * 0.3 + 0.5, 0.75, Math.random() * 0.25 + 0.75 );\n\t\t\t\t\tcolorsBox.push( color.r, color.g, color.b );\n\n\t\t\t\t}\n\n\t\t\t\tboxGeometry.setAttribute( 'color', new THREE.Float32BufferAttribute( colorsBox, 3 ) );\n\n\t\t\t\tfor ( let i = 0; i < 500; i ++ ) {\n\n\t\t\t\t\tconst boxMaterial = new THREE.MeshPhongMaterial( { specular: 0xffffff, flatShading: true, vertexColors: true } );\n\t\t\t\t\tboxMaterial.color.setHSL( Math.random() * 0.2 + 0.5, 0.75, Math.random() * 0.25 + 0.75 );\n\n\t\t\t\t\tconst box = new THREE.Mesh( boxGeometry, boxMaterial );\n\t\t\t\t\tbox.position.x = Math.floor( Math.random() * 20 - 10 ) * 20;\n\t\t\t\t\tbox.position.y = Math.floor( Math.random() * 20 ) * 20 + 10;\n\t\t\t\t\tbox.position.z = Math.floor( Math.random() * 20 - 10 ) * 20;\n\n\t\t\t\t\tscene.add( box );\n\t\t\t\t\tobjects.push( box );\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\t\t\t\trenderer.setPixelRatio( window.devicePixelRatio );\n\t\t\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\t\t\t\tdocument.body.appendChild( renderer.domElement );\n\n\t\t\t\t//\n\n\t\t\t\twindow.addEventListener( 'resize', onWindowResize );\n\n\t\t\t}\n\n\t\t\tfunction onWindowResize() {\n\n\t\t\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n\t\t\t}\n\n\t\t\tfunction animate() {\n\n\t\t\t\trequestAnimationFrame( animate );\n\n\t\t\t\tconst time = performance.now();\n\n\t\t\t\tif ( controls.isLocked === true ) {\n\n\t\t\t\t\traycaster.ray.origin.copy( controls.getObject().position );\n\t\t\t\t\traycaster.ray.origin.y -= 10;\n\n\t\t\t\t\tconst intersections = raycaster.intersectObjects( objects );\n\n\t\t\t\t\tconst onObject = intersections.length > 0;\n\n\t\t\t\t\tconst delta = ( time - prevTime ) / 1000;\n\n\t\t\t\t\tvelocity.x -= velocity.x * 10.0 * delta;\n\t\t\t\t\tvelocity.z -= velocity.z * 10.0 * delta;\n\n\t\t\t\t\tvelocity.y -= 9.8 * 100.0 * delta; // 100.0 = mass\n\n\t\t\t\t\tdirection.z = Number( moveForward ) - Number( moveBackward );\n\t\t\t\t\tdirection.x = Number( moveRight ) - Number( moveLeft );\n\t\t\t\t\tdirection.normalize(); // this ensures consistent movements in all directions\n\n\t\t\t\t\tif ( moveForward || moveBackward ) velocity.z -= direction.z * 400.0 * delta;\n\t\t\t\t\tif ( moveLeft || moveRight ) velocity.x -= direction.x * 400.0 * delta;\n\n\t\t\t\t\tif ( onObject === true ) {\n\n\t\t\t\t\t\tvelocity.y = Math.max( 0, velocity.y );\n\t\t\t\t\t\tcanJump = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontrols.moveRight( - velocity.x * delta );\n\t\t\t\t\tcontrols.moveForward( - velocity.z * delta );\n\n\t\t\t\t\tcontrols.getObject().position.y += ( velocity.y * delta ); // new behavior\n\n\t\t\t\t\tif ( controls.getObject().position.y < 10 ) {\n\n\t\t\t\t\t\tvelocity.y = 0;\n\t\t\t\t\t\tcontrols.getObject().position.y = 10;\n\n\t\t\t\t\t\tcanJump = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tprevTime = time;\n\n\t\t\t\trenderer.render( scene, camera );\n\n\t\t\t}\n"]},"metadata":{},"sourceType":"module"}