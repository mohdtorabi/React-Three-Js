{"ast":null,"code":"var _jsxFileName = \"/Users/torabi97/Desktop/post-bootcamp/react-three/src/components/Home.js\";\nimport React, { useRef, useEffect, useState, Suspense } from \"react\";\nimport { useLoader } from 'react-three-fiber';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport \"../App.scss\"; //Components\n\nimport Header from \"./header\";\nimport { Section } from \"./section\"; // Page State\n\nimport state from \"./state\"; // R3F\n\nimport { Canvas, useFrame, useThree } from \"react-three-fiber\";\nimport { Html, useProgress, useGLTFLoader } from \"drei\"; // React Spring\n\nimport { a, useTransition } from \"@react-spring/web\"; //Intersection Observer\n\nimport { useInView } from \"react-intersection-observer\";\n\nfunction Model({\n  modelPath\n}) {\n  const gltf = useGLTFLoader('scene.gltf', true);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    object: gltf.scene,\n    dispose: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }\n  });\n} // const Camera = () => {\n//   const camera = useRef()\n//   const { aspect, size, setDefaultCamera } = useThree()\n//   const pixelToThreeUnitRatio = 1\n//   const planeDistance = 0\n//   const cameraDistance = 250\n//   const distance = cameraDistance - planeDistance\n//   const height = size.height / pixelToThreeUnitRatio\n//   const halfFovRadians = Math.atan((height / 2) / distance)\n//   const fov = 2 * halfFovRadians * (180/Math.PI)\n//   useEffect(() => void setDefaultCamera(camera.current), [])\n//   return <perspectiveCamera\n//     ref={camera}\n//     aspect={aspect}\n//     fov={fov}\n//     position={[0, 0, cameraDistance]}\n//     onUpdate={self => self.updateProjectionMatrix()}\n//   />\n// }\n// const Lights = () => {\n//   return (\n//     <>\n//       {/* Ambient Light illuminates lights for all objects */}\n//       <ambientLight intensity={0.3} />\n//       {/* Diretion light */}\n//       <directionalLight position={[10, 10, 5]} intensity={1} />\n//       <directionalLight\n//         castShadow\n//         position={[0, 10, 0]}\n//         intensity={1.5}\n//         shadow-mapSize-width={1024}\n//         shadow-mapSize-height={1024}\n//         shadow-camera-far={50}\n//         shadow-camera-left={-10}\n//         shadow-camera-right={10}\n//         shadow-camera-top={10}\n//         shadow-camera-bottom={-10}\n//       />\n//       {/* Spotlight Large overhead light */}\n//       <spotLight intensity={1} position={[1000, 0, 0]} castShadow />\n//     </>\n//   );\n// };\n// const HTMLContent = ({\n//   children,\n//   modelPath,\n//   positionY,\n//   domContent\n// }) => {\n//   const ref = useRef()\n//   // useFrame(() => (\n//   //   ref.current.rotation.y -= 0.01\n//   // ))\n//   return (\n//     // <Section factor={1.5} offset={1}>\n//     //   <group position={[0, position, 0]}>\n//     //     <mesh ref={ref} position={[0, -35, 0]}>\n//     //       <Model url={modelPath} />\n//     //     </mesh>\n//     //     <Html fullscreen portal={domContent}>\n//     //       <div ref={refItem} className='container'>\n//     //         <h1 className='title'>{children}</h1>\n//     //       </div>\n//     //     </Html>\n//     //   </group>\n//     // </Section>\n//     <Section factor={1.5} offset={1}>\n//       <group position={[0, positionY, 0]}>\n//       <mesh onPointerMove={(e) => console.log(\"helllo\")} ref={ref} position={[0, -35, 0]}>\n//         <Model modelPath={modelPath}/>\n//         </mesh>\n//         <Html portal={domContent} fullscreen>\n//           {children}\n//         </Html>\n//       </group>\n//     </Section>\n//   );\n// };\n\n\nfunction handleWheel(e) {\n  console.log(e.camera);\n  e.camera.visible = false;\n}\n\nfunction Asset({\n  url\n}) {\n  const gltf = useLoader(GLTFLoader, url);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    object: gltf.scene,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 10\n    }\n  });\n}\n\nfunction Box(props) {\n  const mesh = useRef();\n  const [hovered, setHover] = useState(false);\n  const [active, setActive] = useState(false); // useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01))\n\n  return /*#__PURE__*/React.createElement(\"mesh\", Object.assign({}, props, {\n    ref: mesh,\n    scale: active ? [1.5, 1.5, 1.5] : [1, 1, 1],\n    onClick: e => setActive(!active),\n    onPointerOver: e => setHover(true),\n    onWheel: handleWheel,\n    onPointerOut: e => setHover(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"boxBufferGeometry\", {\n    attach: \"geometry\",\n    args: [1, 1, 1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"sphereBufferGeometry\", {\n    attach: \"geometry\",\n    args: [1, 16, 16],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    attach: \"material\",\n    color: hovered ? 'hotpink' : 'orange',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction Box2(props) {\n  const mesh = useRef();\n  const [hovered, setHover] = useState(false);\n  const [active, setActive] = useState(false); // useFrame(() => (mesh.current.rotation.x += 0.01))\n\n  return /*#__PURE__*/React.createElement(\"mesh\", Object.assign({}, props, {\n    ref: mesh,\n    scale: active ? [1.5, 1.5, 1.5] : [1, 1, 1],\n    onClick: e => {\n      setActive(!active);\n    },\n    onPointerOver: e => setHover(true),\n    onWheel: handleWheel,\n    onPointerOut: e => setHover(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Suspense, {\n    fallback: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Asset, {\n    url: \"/scene.gltf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction Rig({\n  mouse\n}) {\n  const {\n    camera\n  } = useThree();\n  useFrame(() => {// camera.position.x += (mouse.current[1] / 50 - camera.position.x) * 0.05\n    // camera.position.y += (-mouse.current[1] / 50 - camera.position.y) * 0.05\n    // camera.lookAt(0, 0, 0)\n  });\n  return null;\n}\n\nexport default function Home() {\n  // const domContent = useRef()\n  const mouse = useRef([0, 0]); // const scrollArea = useRef();\n  // const onScroll = (e) => (state.top.current)\n\n  return /*#__PURE__*/React.createElement(Canvas, {\n    colorManagement: true,\n    camera: {\n      position: [80, 100, 0],\n      fov: 25\n    },\n    onPointerMove: e => mouse.current = [e.clientX - window.innerWidth / 2, e.clientY - window.innerHeight / 2],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ambientLight\", {\n    position: [0, 100, 0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\n    position: [0, 0, 0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    position: [-1.2, 0, 0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/portfolio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }, \"Hello\"), /*#__PURE__*/React.createElement(Box2, {\n    position: [1.2, 0, 0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Rig, {\n    mouse: mouse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/torabi97/Desktop/post-bootcamp/react-three/src/components/Home.js"],"names":["React","useRef","useEffect","useState","Suspense","useLoader","GLTFLoader","Header","Section","state","Canvas","useFrame","useThree","Html","useProgress","useGLTFLoader","a","useTransition","useInView","Model","modelPath","gltf","scene","handleWheel","e","console","log","camera","visible","Asset","url","Box","props","mesh","hovered","setHover","active","setActive","Box2","Rig","mouse","Home","position","fov","current","clientX","window","innerWidth","clientY","innerHeight"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState, Suspense } from \"react\";\nimport { useLoader } from 'react-three-fiber';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport \"../App.scss\";\n//Components\nimport Header from \"./header\";\nimport { Section } from \"./section\";\n\n// Page State\nimport state from \"./state\";\n\n// R3F\nimport { Canvas, useFrame, useThree } from \"react-three-fiber\";\nimport { Html, useProgress, useGLTFLoader } from \"drei\";\n\n// React Spring\nimport { a, useTransition } from \"@react-spring/web\";\n//Intersection Observer\nimport { useInView } from \"react-intersection-observer\";\n\nfunction Model({ modelPath }) {\n  const gltf = useGLTFLoader('scene.gltf', true);\n  return <primitive object={gltf.scene} dispose={null} />;\n}\n\n\n// const Camera = () => {\n//   const camera = useRef()\n//   const { aspect, size, setDefaultCamera } = useThree()\n//   const pixelToThreeUnitRatio = 1\n//   const planeDistance = 0\n//   const cameraDistance = 250\n//   const distance = cameraDistance - planeDistance\n//   const height = size.height / pixelToThreeUnitRatio\n//   const halfFovRadians = Math.atan((height / 2) / distance)\n//   const fov = 2 * halfFovRadians * (180/Math.PI)\n//   useEffect(() => void setDefaultCamera(camera.current), [])\n//   return <perspectiveCamera\n//     ref={camera}\n//     aspect={aspect}\n//     fov={fov}\n//     position={[0, 0, cameraDistance]}\n//     onUpdate={self => self.updateProjectionMatrix()}\n//   />\n// }\n// const Lights = () => {\n//   return (\n//     <>\n//       {/* Ambient Light illuminates lights for all objects */}\n//       <ambientLight intensity={0.3} />\n//       {/* Diretion light */}\n//       <directionalLight position={[10, 10, 5]} intensity={1} />\n//       <directionalLight\n//         castShadow\n//         position={[0, 10, 0]}\n//         intensity={1.5}\n//         shadow-mapSize-width={1024}\n//         shadow-mapSize-height={1024}\n//         shadow-camera-far={50}\n//         shadow-camera-left={-10}\n//         shadow-camera-right={10}\n//         shadow-camera-top={10}\n//         shadow-camera-bottom={-10}\n//       />\n//       {/* Spotlight Large overhead light */}\n//       <spotLight intensity={1} position={[1000, 0, 0]} castShadow />\n//     </>\n//   );\n// };\n\n// const HTMLContent = ({\n//   children,\n//   modelPath,\n//   positionY,\n//   domContent\n// }) => {\n//   const ref = useRef()\n//   // useFrame(() => (\n//   //   ref.current.rotation.y -= 0.01\n//   // ))\n//   return (\n//     // <Section factor={1.5} offset={1}>\n//     //   <group position={[0, position, 0]}>\n//     //     <mesh ref={ref} position={[0, -35, 0]}>\n//     //       <Model url={modelPath} />\n//     //     </mesh>\n//     //     <Html fullscreen portal={domContent}>\n//     //       <div ref={refItem} className='container'>\n//     //         <h1 className='title'>{children}</h1>\n//     //       </div>\n//     //     </Html>\n//     //   </group>\n//     // </Section>\n//     <Section factor={1.5} offset={1}>\n//       <group position={[0, positionY, 0]}>\n//       <mesh onPointerMove={(e) => console.log(\"helllo\")} ref={ref} position={[0, -35, 0]}>\n//         <Model modelPath={modelPath}/>\n//         </mesh>\n//         <Html portal={domContent} fullscreen>\n//           {children}\n//         </Html>\n//       </group>\n//     </Section>\n//   );\n// };\nfunction handleWheel(e) {\n  console.log(e.camera);\n  e.camera.visible = false\n}\nfunction Asset({ url }) {\n  const gltf = useLoader(GLTFLoader, url)\n  return <primitive object={gltf.scene} />\n}\n\nfunction Box(props) {\n  const mesh = useRef();\n  const [hovered, setHover] = useState(false);\n  const [active, setActive] = useState(false);\n\n  // useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01))\n  \n  return (\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={active ? [1.5, 1.5, 1.5] : [1, 1, 1]}\n      onClick={(e) => setActive(!active)}\n      onPointerOver={(e) => setHover(true)}\n      onWheel={handleWheel}\n      onPointerOut={(e) => setHover(false)}\n    >\n      <boxBufferGeometry attach=\"geometry\" args={[1, 1, 1]}/>\n      <sphereBufferGeometry attach=\"geometry\" args={[1, 16, 16]}/>\n      <meshStandardMaterial attach=\"material\" color={hovered ? 'hotpink' : 'orange'}/>\n      \n    </mesh>\n  );\n  \n}\n\n\n\n\n\nfunction Box2(props) {\n  const mesh = useRef();\n  const [hovered, setHover] = useState(false);\n  const [active, setActive] = useState(false);\n\n  // useFrame(() => (mesh.current.rotation.x += 0.01))\n  \n  return (\n    <mesh\n      {...props}\n      ref={mesh}\n      scale={active ? [1.5, 1.5, 1.5] : [1, 1, 1]}\n      onClick={(e) => {\n        setActive(!active) \n        \n      }}\n      onPointerOver={(e) => setHover(true)}\n      onWheel={handleWheel}\n      onPointerOut={(e) => setHover(false)}\n    >\n      {/* <boxBufferGeometry attach=\"geometry\" args={[1, 1, 1]}/>\n      <meshStandardMaterial attach=\"material\" color={hovered ? 'hotpink' : 'orange'}/> */}\n      <Suspense fallback>\n        <Asset url=\"/scene.gltf\" />\n      </Suspense>\n    </mesh>\n  );\n  \n}\nfunction Rig({ mouse }) {\n  const { camera } = useThree()\n  useFrame(() => {\n    // camera.position.x += (mouse.current[1] / 50 - camera.position.x) * 0.05\n    // camera.position.y += (-mouse.current[1] / 50 - camera.position.y) * 0.05\n    // camera.lookAt(0, 0, 0)\n  })\n  return null\n}\n\nexport default function Home() {\n  // const domContent = useRef()\n  const mouse = useRef([0, 0])\n  // const scrollArea = useRef();\n  // const onScroll = (e) => (state.top.current)\n\n  return (\n    <Canvas colorManagement camera={{ position: [80, 100, 0],  fov: 25 }} onPointerMove={(e) => (mouse.current = [e.clientX - window.innerWidth / 2, e.clientY - window.innerHeight / 2])}>\n      <ambientLight position={[0, 100, 0]}/>\n      <pointLight position={[0, 0, 0]} />\n      <Box position={[-1.2, 0, 0]}>\n      </Box>\n      <a href=\"/portfolio\">Hello</a>\n      <Box2 position={[1.2, 0, 0]} />\n      <Rig mouse={mouse} />\n    </Canvas>\n  );\n}"]},"metadata":{},"sourceType":"module"}