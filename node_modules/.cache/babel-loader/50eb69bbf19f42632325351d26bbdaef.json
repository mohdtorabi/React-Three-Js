{"ast":null,"code":"var _jsxFileName = \"/Users/torabi97/Desktop/post-bootcamp/R3F-Chairs/src/App.js\";\nimport React, { useRef, useEffect, useState, Suspense } from \"react\";\nimport \"./App.scss\"; //Components\n\nimport Header from \"./components/header\";\nimport { Section } from \"./components/section\"; // Page State\n\nimport state from \"./components/state\"; // R3F\n\nimport { Canvas, useFrame, useThree } from \"react-three-fiber\";\nimport { Html, useProgress, useGLTFLoader } from \"drei\"; // React Spring\n\nimport { a, useTransition } from \"@react-spring/web\"; //Intersection Observer\n\nimport { useInView } from \"react-intersection-observer\";\n\nfunction Model({\n  modelPath\n}) {\n  const gltf = useGLTFLoader(modelPath, true);\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    object: gltf.scene,\n    dispose: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }\n  });\n} // const Camera = () => {\n//   const camera = useRef()\n//   const { aspect, size, setDefaultCamera } = useThree()\n//   const pixelToThreeUnitRatio = 1\n//   const planeDistance = 0\n//   const cameraDistance = 250\n//   const distance = cameraDistance - planeDistance\n//   const height = size.height / pixelToThreeUnitRatio\n//   const halfFovRadians = Math.atan((height / 2) / distance)\n//   const fov = 2 * halfFovRadians * (180/Math.PI)\n//   useEffect(() => void setDefaultCamera(camera.current), [])\n//   return <perspectiveCamera\n//     ref={camera}\n//     aspect={aspect}\n//     fov={fov}\n//     position={[0, 0, cameraDistance]}\n//     onUpdate={self => self.updateProjectionMatrix()}\n//   />\n// }\n// const Lights = () => {\n//   return (\n//     <>\n//       {/* Ambient Light illuminates lights for all objects */}\n//       <ambientLight intensity={0.3} />\n//       {/* Diretion light */}\n//       <directionalLight position={[10, 10, 5]} intensity={1} />\n//       <directionalLight\n//         castShadow\n//         position={[0, 10, 0]}\n//         intensity={1.5}\n//         shadow-mapSize-width={1024}\n//         shadow-mapSize-height={1024}\n//         shadow-camera-far={50}\n//         shadow-camera-left={-10}\n//         shadow-camera-right={10}\n//         shadow-camera-top={10}\n//         shadow-camera-bottom={-10}\n//       />\n//       {/* Spotlight Large overhead light */}\n//       <spotLight intensity={1} position={[1000, 0, 0]} castShadow />\n//     </>\n//   );\n// };\n// const HTMLContent = ({\n//   children,\n//   modelPath,\n//   positionY,\n//   domContent\n// }) => {\n//   const ref = useRef()\n//   // useFrame(() => (\n//   //   ref.current.rotation.y -= 0.01\n//   // ))\n//   return (\n//     // <Section factor={1.5} offset={1}>\n//     //   <group position={[0, position, 0]}>\n//     //     <mesh ref={ref} position={[0, -35, 0]}>\n//     //       <Model url={modelPath} />\n//     //     </mesh>\n//     //     <Html fullscreen portal={domContent}>\n//     //       <div ref={refItem} className='container'>\n//     //         <h1 className='title'>{children}</h1>\n//     //       </div>\n//     //     </Html>\n//     //   </group>\n//     // </Section>\n//     <Section factor={1.5} offset={1}>\n//       <group position={[0, positionY, 0]}>\n//       <mesh onPointerMove={(e) => console.log(\"helllo\")} ref={ref} position={[0, -35, 0]}>\n//         <Model modelPath={modelPath}/>\n//         </mesh>\n//         <Html portal={domContent} fullscreen>\n//           {children}\n//         </Html>\n//       </group>\n//     </Section>\n//   );\n// };\n\n\nexport default function App() {\n  const domContent = useRef();\n  const scrollArea = useRef();\n\n  const onScroll = e => state.top.current;\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Canvas, {\n    colorManagement: true,\n    camera: {\n      position: [0, 0, 120],\n      fov: 70\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Lights, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Suspense, {\n    fallback: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HTMLContent, {\n    modelPath: \"/scene.gltf\",\n    positionY: 250,\n    domContent: domContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, \"Hello\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"scrollArea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'sticky',\n      top: 0\n    },\n    ref: domContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: `${state.pages * 100}vh`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/torabi97/Desktop/post-bootcamp/R3F-Chairs/src/App.js"],"names":["React","useRef","useEffect","useState","Suspense","Header","Section","state","Canvas","useFrame","useThree","Html","useProgress","useGLTFLoader","a","useTransition","useInView","Model","modelPath","gltf","scene","App","domContent","scrollArea","onScroll","e","top","current","position","fov","height","pages"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState, Suspense } from \"react\";\nimport \"./App.scss\";\n//Components\nimport Header from \"./components/header\";\nimport { Section } from \"./components/section\";\n\n// Page State\nimport state from \"./components/state\";\n\n// R3F\nimport { Canvas, useFrame, useThree } from \"react-three-fiber\";\nimport { Html, useProgress, useGLTFLoader } from \"drei\";\n\n// React Spring\nimport { a, useTransition } from \"@react-spring/web\";\n//Intersection Observer\nimport { useInView } from \"react-intersection-observer\";\n\nfunction Model({ modelPath }) {\n  const gltf = useGLTFLoader(modelPath, true);\n  return <primitive object={gltf.scene} dispose={null} />;\n}\n\n// const Camera = () => {\n//   const camera = useRef()\n//   const { aspect, size, setDefaultCamera } = useThree()\n//   const pixelToThreeUnitRatio = 1\n//   const planeDistance = 0\n//   const cameraDistance = 250\n//   const distance = cameraDistance - planeDistance\n//   const height = size.height / pixelToThreeUnitRatio\n//   const halfFovRadians = Math.atan((height / 2) / distance)\n//   const fov = 2 * halfFovRadians * (180/Math.PI)\n//   useEffect(() => void setDefaultCamera(camera.current), [])\n//   return <perspectiveCamera\n//     ref={camera}\n//     aspect={aspect}\n//     fov={fov}\n//     position={[0, 0, cameraDistance]}\n//     onUpdate={self => self.updateProjectionMatrix()}\n//   />\n// }\n// const Lights = () => {\n//   return (\n//     <>\n//       {/* Ambient Light illuminates lights for all objects */}\n//       <ambientLight intensity={0.3} />\n//       {/* Diretion light */}\n//       <directionalLight position={[10, 10, 5]} intensity={1} />\n//       <directionalLight\n//         castShadow\n//         position={[0, 10, 0]}\n//         intensity={1.5}\n//         shadow-mapSize-width={1024}\n//         shadow-mapSize-height={1024}\n//         shadow-camera-far={50}\n//         shadow-camera-left={-10}\n//         shadow-camera-right={10}\n//         shadow-camera-top={10}\n//         shadow-camera-bottom={-10}\n//       />\n//       {/* Spotlight Large overhead light */}\n//       <spotLight intensity={1} position={[1000, 0, 0]} castShadow />\n//     </>\n//   );\n// };\n\n// const HTMLContent = ({\n//   children,\n//   modelPath,\n//   positionY,\n//   domContent\n// }) => {\n//   const ref = useRef()\n//   // useFrame(() => (\n//   //   ref.current.rotation.y -= 0.01\n//   // ))\n//   return (\n//     // <Section factor={1.5} offset={1}>\n//     //   <group position={[0, position, 0]}>\n//     //     <mesh ref={ref} position={[0, -35, 0]}>\n//     //       <Model url={modelPath} />\n//     //     </mesh>\n//     //     <Html fullscreen portal={domContent}>\n//     //       <div ref={refItem} className='container'>\n//     //         <h1 className='title'>{children}</h1>\n//     //       </div>\n//     //     </Html>\n//     //   </group>\n//     // </Section>\n//     <Section factor={1.5} offset={1}>\n//       <group position={[0, positionY, 0]}>\n//       <mesh onPointerMove={(e) => console.log(\"helllo\")} ref={ref} position={[0, -35, 0]}>\n//         <Model modelPath={modelPath}/>\n//         </mesh>\n//         <Html portal={domContent} fullscreen>\n//           {children}\n//         </Html>\n//       </group>\n//     </Section>\n//   );\n// };\n\nexport default function App() {\n  const domContent = useRef()\n\n  const scrollArea = useRef();\n  const onScroll = (e) => (state.top.current)\n  return (\n    <>\n      <Header />\n      <Canvas colorManagement camera={{ position: [0, 0, 120], fov: 70 }}>\n        {/* Lights Component */}\n        {/* <Camera /> */}\n        <Lights/>\n        <Suspense fallback={null}>\n          <HTMLContent \n            modelPath='/scene.gltf'\n            positionY={250}\n            domContent={domContent}\n          >\n            <div className=\"container\">\n              <h1 className=\"title\">Hello</h1>\n            </div>\n          </HTMLContent>\n        </Suspense>\n        \n      </Canvas>\n      \n      <div className=\"scrollArea\">\n          <div style={{position: 'sticky', top:0}} ref={domContent}></div>\n          <div style={{height: `${state.pages * 100}vh`}}></div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}